# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from os import system
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QMessageBox, QGridLayout, QGroupBox
from PyQt5.QtGui import QPixmap
from keras.models import load_model
try:
        system("cls")
        print("Loading the module .........")
        model = load_model('BrainTumor10Epochs.h5')
except:
        print("Model not found")

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(794, 845)
        MainWindow.setStyleSheet("background-color: rgb(0, 0, 75);\n"
                                 "\n"
                                 "QPushButton::pressed\n"
                                 "{\n"
                                 "    background-color : white;\n"
                                 "}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.queryLine = QtWidgets.QLineEdit(self.centralwidget)
        self.queryLine.setGeometry(QtCore.QRect(270, 640, 351, 61))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.queryLine.setFont(font)
        self.queryLine.setStyleSheet("background-color: rgb(0, 0, 158);\n"
                                     "color: white;")
        self.queryLine.setText("")
        self.queryLine.setClearButtonEnabled(True)
        self.queryLine.setObjectName("queryLine")
        self.browseMRIImage = QtWidgets.QPushButton(self.centralwidget)
        self.browseMRIImage.setGeometry(QtCore.QRect(640, 640, 101, 61))
        font = QtGui.QFont()
        font.setFamily("Tw Cen MT Condensed Extra Bold")
        font.setPointSize(10)
        self.browseMRIImage.setFont(font)
        self.browseMRIImage.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.browseMRIImage.setStyleSheet("QPushButton {\n"
                                    "    background-color: rgb(0, 0, 158);\n"
                                    "    color: white;\n"
                                    "    border-radius: 30%;\n"
                                    "}\n"
                                    "QPushButton:hover {\n"
                                    "    \n"
                                    "    background-color: rgb(0, 0, 203);\n"
                                    "}\n"
                                    "\n"
                                    "QPushButton:pressed {\n"
                                    "    \n"
                                    "    background-color: rgb(0, 0, 236);\n"
                                    "}")
        self.browseMRIImage.setObjectName("browseMRIImage")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(240, 40, 361, 61))
        font = QtGui.QFont()
        font.setFamily("Tw Cen MT Condensed Extra Bold")
        font.setPointSize(26)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(255, 255, 255);\n"
                                 "text-align: center;\n"
                                 "size: 50px;")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(380, 100, 71, 61))
        font = QtGui.QFont()
        font.setFamily("Tw Cen MT Condensed Extra Bold")
        font.setPointSize(26)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                   "text-align: center;\n"
                                   "size: 50px;")
        self.label_2.setObjectName("label_2")

        self.labelImage = QtWidgets.QLabel(self.centralwidget)

        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(40, 640, 151, 61))
        font = QtGui.QFont()
        font.setFamily("Tw Cen MT Condensed Extra Bold")
        font.setPointSize(20)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color: rgb(255, 255, 255);\n"
                                   "text-align: center;\n"
                                   "size: 50px;")
        self.label_3.setObjectName("label_3")
        self.scanBTN = QtWidgets.QPushButton(self.centralwidget)
        self.scanBTN.setEnabled(True)
        self.scanBTN.setGeometry(QtCore.QRect(330, 740, 141, 61))
        font = QtGui.QFont()
        font.setFamily("Tw Cen MT Condensed Extra Bold")
        font.setPointSize(10)
        self.scanBTN.setFont(font)
        self.scanBTN.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.scanBTN.setStyleSheet("QPushButton {\n"
                                    "    background-color: rgb(0, 0, 158);\n"
                                    "    color: white;\n"
                                    "    border-radius: 30%;\n"
                                    "}\n"
                                    "QPushButton:hover {\n"
                                    "    \n"
                                    "    background-color: rgb(0, 0, 203);\n"
                                    "}\n"
                                    "\n"
                                    "QPushButton:pressed {\n"
                                    "    \n"
                                    "    background-color: rgb(0, 0, 236);\n"
                                    "}")
        self.scanBTN.setObjectName("scanBTN")
        self.queryInfoBTN = QtWidgets.QPushButton(self.centralwidget)
        self.queryInfoBTN.setGeometry(QtCore.QRect(210, 650, 41, 41))
        font = QtGui.QFont()
        font.setFamily("Tw Cen MT Condensed Extra Bold")
        font.setPointSize(16)
        font.setItalic(False)
        self.queryInfoBTN.setFont(font)
        self.queryInfoBTN.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.queryInfoBTN.setStyleSheet("QPushButton {\n"
                                        "color: white;\n"
                                        "border-radius: 20px;\n"
                                        "border-color: rgb(0, 0, 250);\n"
                                        "    background-color: rgb(0, 0, 158)\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:hover {\n"
                                        "    \n"
                                        "    background-color: rgb(0, 0, 203);\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    \n"
                                        "    background-color: rgb(0, 0, 236);\n"
                                        "}")
        self.queryInfoBTN.setObjectName("queryInfoBTN")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        system("cls")
        self.browseMRIImage.pressed.connect(self.browseImages)
        self.scanBTN.pressed.connect(self.scanImages)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.browseMRIImage.setText(_translate("MainWindow", "browse"))
        self.label.setText(_translate("MainWindow", "Brain Tumor Detector"))
        self.label_2.setText(_translate("MainWindow", "By J"))
        self.label_3.setText(_translate("MainWindow", "MRI Image"))
        self.scanBTN.setText(_translate("MainWindow", "SCAN"))
        self.queryInfoBTN.setText(_translate("MainWindow", "i"))
# import bi_rc

    def browseImages(self):
        global queryFile
        try:
        #     from PIL import Image
            queryFileName = QFileDialog.getOpenFileName(
                None, "Select MRI Image", "./", filter="Image Files (*.png *.jpg *.jpeg)")
            mriImage = queryFileName[0].split("/")[-1]
            self.queryLine.setText(mriImage)
            global fpath
            fpath = queryFileName[0]

        #     img = Image.open(queryFileName[0])
        #     width, height = img.size
        #     img = img.resize((round(250/height*width) , round(300)))

            self.pixmap = QPixmap(queryFileName[0])
            self.labelImage.setPixmap(self.pixmap)
            self.pixmap = self.pixmap.scaled(350, 350)

            self.labelImage.setPixmap(self.pixmap)
            self.labelImage.resize(self.pixmap.width(), self.pixmap.height())
            self.labelImage.move(230, 200)
        except FileNotFoundError:
            msg = QMessageBox()
            msg.setWindowTitle("File not Found")
            msg.setText("You must choose a file.")
            msg.setIcon(QMessageBox.Warning)
            msg.setStandardButtons(QMessageBox.Ok)
            res = msg.exec_()

    def scanImages(self):
            import cv2
            from PIL import Image
            import numpy as np

            try:
                image = cv2.imread(filename=fpath)
                img = Image.fromarray(image)
                img = img.resize((64, 64))
                img = np.array(img)
                input_img = np.expand_dims(img, axis=0)

                result = (model.predict(input_img) > 0.5).astype("int32")
                global finalResult
                finalResult = result[0]
                if(result[0] == 1):
                    msg = QMessageBox()
                    msg.setWindowTitle("Scan Result")
                    msg.setText("TUMOR FOUND...!!")
                    msg.setIcon(QMessageBox.Warning)
                    msg.setStandardButtons(QMessageBox.Ok)
                    res = msg.exec_()
                else:
                    msg = QMessageBox()
                    msg.setWindowTitle("Scan Result")    
                    msg.setText("Tumor not found")
                    msg.setIcon(QMessageBox.Information)
                    msg.setStandardButtons(QMessageBox.Ok)
                    res = msg.exec_()
            except:
                msg = QMessageBox()
                msg.setWindowTitle("image not Found")
                msg.setText("You must choose an image.")
                msg.setIcon(QMessageBox.Warning)
                msg.setStandardButtons(QMessageBox.Ok)
                res = msg.exec_()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
